{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home News 08/19/2019: Course site open. Welcome!","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#news","text":"08/19/2019: Course site open. Welcome!","title":"News"},{"location":"1general/","text":"Course Information Instructor Instructor: Kangkook Jee Office ECSS 3.226 Office hour: 3:00 ~ 4:30 PM Friday Course website: http://www.syssec.org/cs6332-F19/ Class meetings When: F 15:05-17:45 (3:05pm-5:45pm) Where: Room CB3 1.314 in the Class Building 3 Course Description CS 6332 is a graduate-level, research-oriented, systems, and software, security class. From the course student will learn initialization process of operating system and its subsequent process executions; principles of dynamic and static analysis approaches to monitor, analyze, and mitigate both benign and malicious programs; various techniques for reverse engineering binaries, bytecodes, obfuscated (packed) malware. Lastly, the course will cover the state of the art attacks techniques.. Learning expectations Through this course, student will learn the basic principles regarding; How computer operates in general which includes how it load from BIOS and subsequently boots up Operating Systems for a given hard. How it loads programs and runs it from the memory space with different execution models such as direct and hypervisor-based execution of the binary. The execution of program atop language run-times (Python, JVM, Golang, and Rust). Based on this understanding students will learn both attack and defense technics. Attack techniques: Buffer overflow, Heap overflow, Integer overflow, Return-oriented programming, Signal-oriented programming, Packing. Defense and analysis techniques: Program obfuscation, Binary randomization, Static and dynamic binary analysis. Reverse engineering bytecode and different instrumentation techniques for analysis and mitigation purposes. Course pre-requisites CS 3340: Computer Architecture ; CS 3377: C Programming in a UNIX Environment ; CS 4348 - Operating Systems Concepts Recommended courses CS 6301: Language-based Security ; CS 4393: Computer and Network Security ; CS 6349.001: Network Security Suggested Texts, Readings, & Materials The course has no textbook, but assigned readings from different sources (refer to course schedule). The followings are recommended readings for the class. [AOE] Erickson, Jon. \u201cHacking: The Art of Exploitation\u201d, 2nd Edition. [SRE] Eldad Eilam. \u201cReversing: Secrets of Reverse Engineering\u201d. [CSAPP] Randal E. Bryant and David R. O\u2019Hallaron. \u201cComputer Systems: A Programmer\u2019s Perspective\u201d 2nd Edition. [TSH] Kozoil, Jack. \u201cThe Shellcoder\u2019s Handbook: Discovering and Exploiting Security Holes\u201d. [PPA] Principles in Program Analysis. Springer. TAs TA: [TBD] Email: cs6332staff@utdallas.edu Online discussion Online discussion is strongly encouraged and it will help you a lot in solving lab problems. Please join Piazza and post your questions, ideas and thoughts.","title":"Course Information"},{"location":"1general/#course-information","text":"","title":"Course Information"},{"location":"1general/#instructor","text":"Instructor: Kangkook Jee Office ECSS 3.226 Office hour: 3:00 ~ 4:30 PM Friday Course website: http://www.syssec.org/cs6332-F19/","title":"Instructor"},{"location":"1general/#class-meetings","text":"When: F 15:05-17:45 (3:05pm-5:45pm) Where: Room CB3 1.314 in the Class Building 3","title":"Class meetings"},{"location":"1general/#course-description","text":"CS 6332 is a graduate-level, research-oriented, systems, and software, security class. From the course student will learn initialization process of operating system and its subsequent process executions; principles of dynamic and static analysis approaches to monitor, analyze, and mitigate both benign and malicious programs; various techniques for reverse engineering binaries, bytecodes, obfuscated (packed) malware. Lastly, the course will cover the state of the art attacks techniques..","title":"Course Description"},{"location":"1general/#learning-expectations","text":"Through this course, student will learn the basic principles regarding; How computer operates in general which includes how it load from BIOS and subsequently boots up Operating Systems for a given hard. How it loads programs and runs it from the memory space with different execution models such as direct and hypervisor-based execution of the binary. The execution of program atop language run-times (Python, JVM, Golang, and Rust). Based on this understanding students will learn both attack and defense technics. Attack techniques: Buffer overflow, Heap overflow, Integer overflow, Return-oriented programming, Signal-oriented programming, Packing. Defense and analysis techniques: Program obfuscation, Binary randomization, Static and dynamic binary analysis. Reverse engineering bytecode and different instrumentation techniques for analysis and mitigation purposes.","title":"Learning expectations"},{"location":"1general/#course-pre-requisites","text":"CS 3340: Computer Architecture ; CS 3377: C Programming in a UNIX Environment ; CS 4348 - Operating Systems Concepts","title":"Course pre-requisites"},{"location":"1general/#recommended-courses","text":"CS 6301: Language-based Security ; CS 4393: Computer and Network Security ; CS 6349.001: Network Security","title":"Recommended courses"},{"location":"1general/#suggested-texts-readings-materials","text":"The course has no textbook, but assigned readings from different sources (refer to course schedule). The followings are recommended readings for the class. [AOE] Erickson, Jon. \u201cHacking: The Art of Exploitation\u201d, 2nd Edition. [SRE] Eldad Eilam. \u201cReversing: Secrets of Reverse Engineering\u201d. [CSAPP] Randal E. Bryant and David R. O\u2019Hallaron. \u201cComputer Systems: A Programmer\u2019s Perspective\u201d 2nd Edition. [TSH] Kozoil, Jack. \u201cThe Shellcoder\u2019s Handbook: Discovering and Exploiting Security Holes\u201d. [PPA] Principles in Program Analysis. Springer.","title":"Suggested Texts, Readings, &amp; Materials"},{"location":"1general/#tas","text":"TA: [TBD] Email: cs6332staff@utdallas.edu","title":"TAs"},{"location":"1general/#online-discussion","text":"Online discussion is strongly encouraged and it will help you a lot in solving lab problems. Please join Piazza and post your questions, ideas and thoughts.","title":"Online discussion"},{"location":"2schedule/","text":"Schedule [TBD]","title":"Schedule"},{"location":"2schedule/#schedule","text":"[TBD]","title":"Schedule"},{"location":"resources/papers/","text":"Papers [TBD]","title":"Papers"},{"location":"resources/papers/#papers","text":"[TBD]","title":"Papers"},{"location":"resources/tools/","text":"Arsenal [TBD]","title":"Arsenal"},{"location":"resources/tools/#arsenal","text":"[TBD]","title":"Arsenal"}]}